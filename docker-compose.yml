version: '3.8'

services:
  # Serviço do PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: f1-dashboard-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: f1_dashboard
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - f1-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Serviço da API NestJS
  api:
    build:
      context: .
      target: development
    container_name: f1-dashboard-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: f1_dashboard
      PORT: 3000
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - f1-network
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run start:dev

  # Serviço do pgAdmin (opcional - interface web para PostgreSQL)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: f1-dashboard-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - f1-network
    depends_on:
      - postgres

# Volumes para persistir dados
volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

# Rede para comunicação entre containers
networks:
  f1-network:
    driver: bridge
